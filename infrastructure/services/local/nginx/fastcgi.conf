proxy_cache_path /var/cache/nginx
    levels=1:2
    keys_zone=STATIC:10m
    max_size=500m
    inactive=60m
    use_temp_path=off;

upstream nextjs_upstream {
    # Pour la CI, nextjs est r√©solu en 127.0.0.1 (cf. extra_hosts dans infrastructure/environments/testing.yml)
    server nextjs:3000;
}

#
# This server take all requests from Varnish and forward to PHP-FPM
#
server {
    include /etc/nginx/default_headers.conf;
    listen 8080;
    server_name capco.test capco.prod capco.dev assets.cap.co;
    root /var/www/public;
    port_in_redirect off;

    set $symfonyEnv dev;
    if ( $host = 'capco.prod' ) {
        set $symfonyEnv prod;
    }
    if ( $host = 'capco.test' ) {
        set $symfonyEnv test;
    }

    # strip index.php/ prefix if it is present
    rewrite ^/index\.php/?(.*)$ /$1 permanent;

    location / {
        index index.php;
        try_files $uri @rewriteapp;
    }

    location @rewriteapp {
        rewrite ^(.*)$ /index.php/$1 last;
    }

    # This handle local medias on the server with imagine and liip.
    location ~ ^/media/cache/.*/default/ {
        try_files $uri @rewriteapp;
    }

    location /export/ {
        internal;
    }

    location /magiclinks/ {
        return 404;
    }

    # Public API endpoint :
    # - CSP is disabled
    # - all origins are allowed
    location = /graphql {
        add_header Content-Security-Policy "default-src 'none'" always;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "OPTIONS, POST" always;
        add_header Access-Control-Allow-Headers "Accept, Accept-Language, Origin, Content-Type, Authorization" always;

        include /etc/nginx/fastcgi_forward.conf;
    }

    # Internal API endpoints :
    # - CSP is disabled
    # - only our origin is allowed
    location = /graphql/internal {
        add_header Content-Security-Policy "default-src 'none'" always;
        #  Access-Control headers are already added by GraphQLController.php for CORS
        include /etc/nginx/fastcgi_forward.conf;
    }
    location = /graphql/dev {
        add_header Content-Security-Policy "default-src 'none'" always;
        #  Access-Control headers are already added by GraphQLController.php for CORS
        include /etc/nginx/fastcgi_forward.conf;
    }

    # This location forwards to our Symfony application
    # CSP allow iframes
    location /widget_debate {
        add_header Content-Security-Policy
            "default-src * 'unsafe-inline' 'unsafe-eval'; script-src * data: https://* 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src * data: blob: ; style-src * data: https://* 'unsafe-inline';"
            always;
        add_header Access-Control-Allow-Origin "*" always;

        include /etc/nginx/fastcgi_forward.conf;
    }

    #
    # This location is useful to access recordings on our buckets.
    # This allow us to use our own domain, proxy, handle caching before accessing the files.
    #
    # https://www.scaleway.com/en/docs/setting-up-object-proxy-object-storage/
    location /jitsi_recordings/ {
        resolver 1.1.1.1;
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header Connection "";
        proxy_set_header Authorization '';
        proxy_set_header Host jitsi-recordings.s3.fr-par.scw.cloud;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header x-amz-meta-server-side-encryption;
        proxy_hide_header x-amz-server-side-encryption;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
        proxy_intercept_errors on;
        add_header Cache-Control max-age=31536000;
        proxy_pass https://jitsi-recordings.s3.fr-par.scw.cloud/;
    }

    # Our new Admin powered by NextJS :
    location ^~ /_next/static/ {
        proxy_pass http://nextjs_upstream;
        proxy_cache STATIC;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    location ~ ^/(admin-next|profile/organization|project-district/|pages|contact$|projects$) {
        proxy_pass http://nextjs_upstream;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # This location forwards to our simplesaml application
    location ^~ /simplesaml {
        alias /var/www/vendor/simplesamlphp/simplesamlphp/www;
        location ~ ^(?<prefix>/simplesaml)(?<script_name>.*?\.php)(?<path_info>/.*)?$ {
            include fastcgi_params;
            include environments;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_param SCRIPT_FILENAME $document_root$script_name;
            fastcgi_param PATH_INFO $path_info;
            fastcgi_param HTTPS $fastcgi_https;
            fastcgi_param SERVER_PORT 80; # Required because we listen port 8080
            fastcgi_pass 127.0.0.1:9000;
        }
    }

    # This location forwards to our Symfony application
    location ~ ^/index.php(/|$) {
        include /etc/nginx/fastcgi_forward.conf;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log stderr;
    access_log stderr;
}