#!/bin/bash
set -e

function test_phpfpm {
  /etc/init.d/php8.1-fpm status > /dev/null
}

function test_mysqldatabase {
   mysqlshow --host=${SYMFONY_DATABASE_HOST:-127.0.0.1} --port=${SYMFONY_DATABASE_PORT:-3306} --user=${SYMFONY_DATABASE_USER:-root} --password=$SYMFONY_DATABASE_PASSWORD ${SYMFONY_DATABASE_NAME:-symfony} > /dev/null
}

function test_mysqldatabase_uptodate {
    if [[ $(php /var/www/bin/console doctrine:schema:validate | grep -o "is in sync" | wc -l) = 1 ]];
    then echo "[$(date -u)][CRONTAB] Database synchronised";
    else echo "[$(date -u)][CRONTAB] Database not synchronised"; return 1;
    fi;
}

echo "[$(date -u)][CRONTAB] Waiting for php-fpm and MySQL..."
# Wait till mysql, php-fpm are ready
timeout=1
until ( test_phpfpm && test_mysqldatabase && test_mysqldatabase_uptodate )
do
    sleep $timeout
    timeout=$(( $timeout + 1 ))
done

# remove write permission for (g)roup and (o)ther (required by cron)
chmod -R go-w /etc/cron.d

# update default values of PAM environment variables (used by CRON scripts)
env | while read -r LINE; do
    IFS="=" read VAR VAL <<< ${LINE}
    sed --in-place "/^${VAR}[[:blank:]=]/d" /etc/security/pam_env.conf || true
    echo "${VAR} DEFAULT=\"${VAL}\"" >> /etc/security/pam_env.conf
done

echo "[$(date -u)][CRONTAB] Installingâ€¦"
crontab -uroot /etc/cron.d/crontab

echo "[$(date -u)][CRONTAB] Started!"
exec cron -f
