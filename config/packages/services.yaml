services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            Psr\Log\LoggerInterface: '@monolog.logger.request'
            Caxy\HtmlDiffBundle\Service\HtmlDiffService: '@caxy.html_diff'
            $samlIdp: '%saml_sp%'
            $logger: '@logger'
            $projectDir: '%kernel.project_dir%'
            $env: '%kernel.environment%'
            $locale: '%locale%'
            $backChannelSecret: '%openid_backchannel_secret%'
            $redisSessionHandler: '@Capco\UserBundle\Security\SessionWithJsonHandler'
            $translator: '@translator.default'
            $publisher: '@swarrot.publisher'
            $hwiHttpClient: '@hwi_oauth.http_client'
            $hwiStorage: '@hwi_oauth.storage.session'
            $timezoneDetector: '@Capco\AdminBundle\Timezone\GlobalConfigurationTimeZoneDetector'

    Capco\AppBundle\Search\AnalyticsSearch: ~

    Capco\AppBundle\Import\:
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Import/*'

    Capco\AppBundle\Service\:
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Service/*'

    Capco\AppBundle\Factory\:
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Factory/*'

    Capco\AppBundle\EventListener\ToggleSubscriber:
        tags:
            - { name: kernel.event_subscriber }

    Http\Client\Common\HttpMethodsClient: '@httplug.client.default.http_methods'
    authentication_failure_handler: '@Capco\AppBundle\EventListener\AuthenticationHandler'

    Capco\AppBundle\Helper\ConvertCsvToArray:
        public: true

    Capco\AppBundle\SiteImage\SiteFaviconProcessor:
        arguments:
            $webDir: '%kernel.project_dir%/public/'

    Capco\AppBundle\Generator\DiffGenerator: ~

    Geocoder\Provider\GoogleMaps\GoogleMaps:
        arguments:
            $apiKey: '%google_maps_key_server%'
    Capco\AppBundle\Utils\Canonicalizer: null
    Box\Spout\Writer\CSV\Writer: null

    Capco\AppBundle\PublicApi\PublicApiKeyUserProvider:
        public: true
    Capco\AppBundle\PublicApi\PublicApiKeyAuthenticator:
        public: true
    Overblog\PromiseAdapter\Adapter\WebonyxGraphQLSyncPromiseAdapter:
        arguments:
            - '@webonyx_graphql.sync_promise_adapter'

    Capco\AppBundle\DataFixtures\ORM\CustomOrderFilesLocator:
        arguments:
            - '@hautelook_alice.locator.environmentless'
            - '%kernel.project_dir%/fixtures/'

    ZxcvbnPhp\Zxcvbn: null
    hautelook_alice.locator: '@Capco\AppBundle\DataFixtures\ORM\CustomOrderFilesLocator'
    capco.fidry_alice_data_fixtures.loader.simple:
        class: Fidry\AliceDataFixtures\Loader\SimpleLoader
        arguments:
            - '@nelmio_alice.files_loader'
    Capco\AppBundle\EventListener\PriorAuthenticationHandler:
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.request,
                  class: Capco\AppBundle\EventListener\PriorAuthenticationHandler,
                  priority: 14,
              }
    fidry_alice_data_fixtures.loader.simple: '@Capco\AppBundle\DataFixtures\ORM\CustomOrderLoader'
    Capco\AppBundle\DataFixtures\ORM\CustomOrderLoader:
        arguments:
            - '@capco.fidry_alice_data_fixtures.loader.simple'

    #### USER

    Capco\UserBundle\Authenticator\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Authenticator/*'

    Capco\UserBundle\Form\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Form/*'

    Capco\UserBundle\Listener\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Listener/*'

    Capco\UserBundle\Security\:
        resource: '%kernel.project_dir%/src/Capco/UserBundle/Security/*'
        exclude: '%kernel.project_dir%/src/Capco/UserBundle/Security/Exception/*'

    Capco\UserBundle\Security\Core\User\OauthUserProvider:
        autowire: true
        arguments:
            $properties: { facebook: facebook_id }

    Capco\UserBundle\Security\Core\User\SamlUserProvider: ~

    Capco\UserBundle\Listener\UserNotificationsListener:
        autowire: true
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist }

    Capco\UserBundle\Security\Core\User\UserEmailProvider:
        arguments: ['@fos_user.user_manager', {}]

    Capco\AppBundle\Locale\PublishedLocalesDataloader:
        autowire: true

    Capco\AppBundle\Locale\DefaultLocaleCodeDataloader: ~

    Capco\UserBundle\Doctrine\UserManager:
        public: true
        arguments:
            $class: '%fos_user.model.user.class%'

    Capco\UserBundle\Security\Http\Logout\LogoutSuccessHandler:
        autowire: true
        arguments:
            # Order of handlers matter here!
            $handlers:
                - '@Capco\UserBundle\Security\Http\Logout\Handler\FranceConnectLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\BasicAuthLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\SAMLLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\OpenIDLogoutHandler'
                - '@Capco\UserBundle\Security\Http\Logout\Handler\CASLogoutHandler'

    Capco\UserBundle\OpenID\OpenIDOptionsModifier: ~

    Capco\UserBundle\FranceConnect\FranceConnectOptionsModifier: ~

    Capco\UserBundle\Facebook\FacebookOptionsModifier: ~

    Capco\UserBundle\OpenID\OpenIDExtraMapper:
        arguments:
            $instanceName: '%instance_name%'
    Capco\UserBundle\OpenID\OpenIDReferrerResolver:
        arguments:
            $instanceName: '%instance_name%'

    Capco\UserBundle\Authenticator\MagicLinkAuthenticator:
        arguments:
            $tokenLifetimeInMinutes: '%magiclinks_duration_in_minutes%'

    Capco\UserBundle\Hwi\FeatureChecker:
        public: true

    # Logout Handlers
    Capco\UserBundle\Security\Http\Logout\Handler\BasicAuthLogoutHandler: ~

    Capco\UserBundle\Security\Http\Logout\Handler\SAMLLogoutHandler: ~

    Capco\UserBundle\Security\Http\Logout\Handler\OpenIDLogoutHandler:
        arguments:
            $resourceOwner: '@hwi_oauth.resource_owner.openid'

    Capco\UserBundle\Security\Http\Logout\Handler\FranceConnectLogoutHandler:
        lazy: true
        arguments:
            $resourceOwner: '@hwi_oauth.resource_owner.franceconnect'
            $tokenStorage: '@security.token_storage'

    Capco\AppBundle\Client\:
        autowire: true
        resource: '%kernel.project_dir%/src/Capco/AppBundle/Client/*'

    Capco\AppBundle\Client\OccitanieClient:
        autowire: true
        arguments:
            $username: '%occitanie_username%'
            $password: '%occitanie_password%'
            $clientId: '%occitanie_client_id%'
            $clientSecret: '%occitanie_client_secret%'
            $baseUrl: '%occitanie_base_url%'

    Capco\AppBundle\Client\OccitaniePreprodClient:
        autowire: true
        arguments:
            $username: '%occitanie_username%'
            $password: '%occitanie_password%'
            $clientId: '%occitanie_client_id%'
            $clientSecret: '%occitanie_client_secret%'
            $baseUrl: '%occitanie_base_url%'

    Capco\AppBundle\Client\CloudflareElasticClient:
        autowire: true
        arguments:
            $logger: '@logger'
            $esLoggerCollector: '@Capco\AppBundle\Elasticsearch\ElasticsearchLogger'
            $hostname: '%router.request_context.host%'
            $environment: '%kernel.environment%'
            $elasticsearchHost: '%elasticsearch_host%'
            $logpushElasticsearchHost: '%logpush_elasticsearch_host%'
            $logpushElasticsearchIndex: '%logpush_elasticsearch_index%'
            $logpushElasticsearchPassword: '%logpush_elasticsearch_password%'
            $logpushElasticsearchUsername: '%logpush_elasticsearch_username%'
            $logpushElasticsearchPort: '%logpush_elasticsearch_port%'

    Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolverInterface: '@security.authentication.trust_resolver'

    Sonata\AdminBundle\Templating\TemplateRegistry:
        public: true

    simplesamlphp.auth: '@SimpleSAML\Auth\Simple'

    SimpleSAML\Auth\Simple:
        arguments: ['%saml_sp%']

    Capco\UserBundle\Authenticator\SamlAuthenticator:
        autowire: true
        arguments:
            $samlAuth: '@simplesamlphp.auth'
            $samlIdp: '%saml_sp%'

    swiftmailer.mailer.transport.mandrill:
        class: Capco\AppBundle\Mailer\Transport\MandrillTransport
        arguments:
            - '@swiftmailer.mailer.mandrill.transport.eventdispatcher'

    swiftmailer.mailer.transport.mailjet:
        class: Capco\AppBundle\Mailer\Transport\MailjetTransport
        arguments:
            - '@swiftmailer.mailer.mailjet.transport.eventdispatcher'

    swiftmailer.mailer.transport.api:
        class: Capco\AppBundle\Mailer\Transport\Transport
        arguments:
            - '@swiftmailer.mailer.transport.mandrill'
            - '@swiftmailer.mailer.transport.mailjet'
            - '@swiftmailer.mailer.api.transport.eventdispatcher'

    Capco\AppBundle\Font\FontProcessor:
        public: true

    Capco\AppBundle\Font\FontManager:
        public: true

    Capco\AppBundle\Router\DefaultPatternGenerationStrategy:
        arguments:
            $strategy: prefix
            $locales: '%locales%'
            $cacheDir: '%kernel.cache_dir%'
            $translationDomain: 'routes'
            $defaultLocale: 'fr-FR'

    Capco\AppBundle\Router\I18nRouter:
        autowire: true
        arguments:
            $resource: '%kernel.project_dir%/config/routes.yaml'
            $logger: '@logger'
            $jmsLocaleResolver: '@jms_i18n_routing.locale_resolver.default'
        calls:
            - [setLocaleResolver, ['@jms_i18n_routing.locale_resolver']]
            - [setI18nLoaderId, ['jms_i18n_routing.loader']]
            - [setDefaultLocale, ['%jms_i18n_routing.default_locale%']]
            - [setRedirectToHost, ['%jms_i18n_routing.redirect_to_host%']]
            - [setOption, ['cache_dir', '%kernel.cache_dir%']]
            - [setOption, ['debug', '%kernel.debug%']]

    jms_i18n_routing.router: '@Capco\AppBundle\Router\I18nRouter'

    Capco\AppBundle\Security\CaptchaChecker:
        arguments:
            $turnstilePrivateKey: '%turnstile_private_key%'
            $recaptchaPrivateKey: '%recaptcha_private_key%'

    Capco\AppBundle\RedirectionIO\ProjectKeyDataloader:
        autowire: true
        class: 'Capco\AppBundle\RedirectionIO\ProjectKeyDataloader'

    Capco\AppBundle\RedirectionIO\RequestResponseListener:
        decorates: 'RedirectionIO\Client\ProxySymfony\EventListener\RequestResponseListener'
        arguments:
            - '@Capco\AppBundle\Toggle\Manager'
            - '@Capco\AppBundle\RedirectionIO\Client'

    Capco\AppBundle\RedirectionIO\Client:
        decorates: 'RedirectionIO\Client\Sdk\Client'
        arguments:
            - '@Capco\AppBundle\RedirectionIO\ProjectKeyDataloader'
            - '@logger'
            - '@Capco\AppBundle\Toggle\Manager'
            - 20000
            - '%agent_tcp%'
            - '%agent_unix%'

    Capco\AppBundle\Manager\AnalysisConfigurationManager: ~

    Egulias\EmailValidator\EmailValidator:
        autowire: true
        class: 'Egulias\EmailValidator\EmailValidator'

    Overblog\PromiseAdapter\PromiseAdapterInterface:
        alias: overblog_dataloader.webonyx_graphql_sync_promise_adapter

    Capco\AppBundle\Command\RemindUserAccountConfirmationCommand: ~

    Capco\AppBundle\GraphQL\Mutation\ResetPasswordMutation:
        arguments:
            $firewallName: '%fos_user.firewall_name%'

    Symfony\Component\Cache\Adapter\ApcuAdapter:
        public: true

    Capco\AppBundle\Cache\SessionListener:
        arguments:
            $session: '@session'
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    Capco\AppBundle\Mailer\SendInBlue\ContactsApi:
        arguments:
            $sendinblueApiKey: '%sendinblue_api_key%'

    Capco\AppBundle\Mailer\SendInBlue\SendInBlueManager:
        arguments:
            $sendinblueNlListId: '%sendinblue_nl_list_id%'
            $apiInstance: '@Capco\AppBundle\Mailer\SendInBlue\ContactsApi'

    Capco\AppBundle\Mailer\SendInBlue\SendInBluePublisher: ~

    Capco\AppBundle\Mailer\EmailingCampaignSender: ~

    Doctrine\Migrations\Version\DbalMigrationFactory: ~

    Capco\AppBundle\MigrationHelper\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments:
            [
                '@Capco\AppBundle\MigrationHelper\MigrationFactoryDecorator.inner',
                '@service_container',
            ]

    Capco\AppBundle\Mailer\SenderEmailDomains\MailjetClient:
        arguments:
            $publicKey: '%mailjet_public_key%'
            $privateKey: '%mailjet_private_key%'
    Capco\AppBundle\Mailer\SenderEmailDomains\MandrillClient:
        arguments:
            $key: '%mandrill_api_key%'

    Capco\AppBundle\Mailer\SenderEmailDomains\SenderEmailDomainsManager:
        arguments:
            $environment: '%kernel.environment%'

    Capco\UserBundle\Handler\UserInvitationHandler: ~

    Capco\UserBundle\Handler\CasHandler:
        autowire: true
        arguments:
            $environment: '%kernel.environment%'

    Capco\UserBundle\Security\SessionWithJsonHandler:
        arguments:
            $redis: '@snc_redis.session'
            $prefix: '%redis_prefix%session_json_new_%kernel.environment%_' # We add env in prefix to allow multi environments sessions in dev
            $requestStack: '@request_stack'
            $sessionLifetime: '%session_lifetime_seconds%'
            $sessionTimeout: '%session_timeout_seconds%'
    Capco\UserBundle\Security\Core\User\CasUserProvider:
        public: true

    Capco\UserBundle\Security\Service\CapebUserFilter:
        autowire: true
        arguments:
            $url: '%cas_verify_url_profile%'

    Doctrine\ORM\Id\UuidGenerator:
        public: true

    Capco\AppBundle\Client\DeployerClient:
        arguments:
            $deployerBaseUrl: '%deployer_api_url%'
            $instanceName: '%instance_name%'
            $token: '%instance_auth_token%'

    Capco\AppBundle\Anonymizer\UserAnonymizer:
        public: true

    Symfony\Component\String\Slugger\AsciiSlugger:
        autowire: true

    Capco\AppBundle\CivicIA\CivicIAMassUpdater:
        autowire: true

    Symfony\Component\String\Slugger\SluggerInterface: '@Symfony\Component\String\Slugger\AsciiSlugger'

    Gaufrette\Adapter\Local:
        public: true
        autowire: true
        arguments:
            $directory: '%kernel.project_dir%/public/media'

    Gaufrette\Filesystem:
        public: true
        autowire: true
        arguments:
            $adapter: '@Gaufrette\Adapter\Local'

    Capco\AppBundle\FileSystem\ConfigFileSystem:
        public: true
        autowire: true

    Capco\AppBundle\FileSystem\ConfigLocalAdapter:
        public: true
        autowire: true

    Capco\AppBundle\Provider\MediaProvider:
        public: true
        autowire: true

    Capco\AppBundle\Provider\LocaleProvider:
        public: true
        autowire: true

    Capco\AppBundle\Provider\LocaleProviderInterface: '@Capco\AppBundle\Provider\LocaleProvider'

    Capco\AppBundle\Service\AddStepService:
        autowire: true
        public: true

    sonata.admin.admin_exporter:
        class: 'Sonata\AdminBundle\Bridge\Exporter\AdminExporter'
        public: true

    hwi_oauth.resource_owner.franceconnect:
        class: 'Capco\UserBundle\FranceConnect\FranceConnectResourceOwner'
        public: true
        autowire: true
        arguments:
            $options:
                client_id: 'fake'
                client_secret: 'fake'
                access_token_url: 'fake'
                authorization_url: 'fake'
                infos_url: 'fake'
                logout_url: 'fake'
                csrf: true
                'paths': []
            $name: 'franceconnect'
            $optionsModifier: '@Capco\UserBundle\FranceConnect\FranceConnectOptionsModifier'

    hwi_oauth.resource_owner.openid:
        class: 'Capco\UserBundle\OpenID\OpenIDResourceOwner'
        public: true
        autowire: true
        arguments:
            $options:
                client_id: 'fake'
                client_secret: 'fake'
                access_token_url: 'fake'
                authorization_url: 'fake'
                infos_url: 'fake'
                logout_url: 'fake'
                'paths': []
            $name: 'openid'
            $optionsModifier: '@Capco\UserBundle\OpenID\OpenIDOptionsModifier'

    hwi_oauth.resource_owner.facebook:
        class: 'Capco\UserBundle\Facebook\FacebookResourceOwner'
        public: true
        autowire: true
        arguments:
            $options:
                client_id: 'fake'
                client_secret: 'fake'
                scope: 'email'
                options:
                    display: page
                'paths': []
            $name: 'facebook'
            $optionsModifier: '@Capco\UserBundle\Facebook\FacebookOptionsModifier'

    Capco\AppBundle\Faker\AddressProvider:
        arguments:
            - '@Faker\Generator'
        tags: [{ name: nelmio_alice.faker.provider }]

    Capco\AppBundle\Security\RateLimiter:
        autowire: true
        public: true

    Capco\AppBundle\Service\EmailRateLimiter:
        autowire: true
        public: true

    Capco\AppBundle\Fetcher\SmsProviderFetcher:
        arguments:
            $smsProvider: '%sms_provider%'
            $twilioSmsProvider: '@Capco\AppBundle\Helper\TwilioSmsProvider'
            $orangeSmsProvider: '@Capco\AppBundle\Helper\OrangeSmsProvider'

    Capco\AppBundle\Helper\OrangeSmsProvider:
        arguments:
            $redis: '@snc_redis.default'
            $redisExpirationTime: '%sms_orange_request_id_expiration_time%'

    Capco\AppBundle\Controller\Command\Service\FilePathResolver\UserGroupsFilePathResolver: ~

    Capco\AppBundle\Service\MailChimpClient:
        arguments:
            $mandrillApiKey: '%mandrill_api_key%'

    Capco\AppBundle\MessageHandler\:
        resource: '../../src/Capco/AppBundle/MessageHandler'

    Symfony\Component\Finder\Finder:
        class: Symfony\Component\Finder\Finder

    Capco\AppBundle\Validator\Constraints\MaxFolderSizeValidator:
        arguments:
            $maxSize: '%max_media_folder_size%'
            $projectDir: '%kernel.project_dir%'

    Capco\AppBundle\Logger\ActionLogger: ~
