# HTTP caching (with Varnish)
fos_http_cache:
    debug:
        enabled: false
    tags:
        enabled: false
    user_context:
        enabled: false
    # This configure our HTTP caching headers
    cache_control:
        defaults:
            overwrite: false
        rules:
            # 1/ No cache in bo
            - match:
                  path: ^/admin$
              headers:
                  cache_control:
                      public: false
                      s_maxage: 0
            # 2/ Internal GraphQL API cache is done in GraphQLController
            # because fos_http_cache does not support caching POST requests

            # 3/ Match everything to set defaults
            - match:
                  path: ^/
                  methods:
                      - GET
              headers:
                  cache_control:
                      public: true
                      s_maxage: 60
                  vary: [Accept-Encoding, Accept-Language, Origin, Access-Control-Request-Headers, Access-Control-Request-Method]
    # The proxy client sends invalidation requests to your caching proxy.
    proxy_client:
        default: varnish
        varnish:
            http:
                servers:
                    - 127.0.0.1
                    - 172.17.0.1 # It can be docker IP.
                base_url: 127.0.0.1

services:
    Capco\AppBundle\Cache\RedisCache:
        autowire: true
        arguments:
            $redisClient: '@snc_redis.default'
            $namespace: '%redis_prefix%'
    Capco\AppBundle\Cache\RedisTagCache:
        autowire: true
