#!/usr/bin/env php
<?php

use App\Kernel;
use Capco\AppBundle\CapcoApplication;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\ErrorHandler\Debug;
use Symfony\Component\Dotenv\Dotenv;

if (false === in_array(\PHP_SAPI, ['cli', 'phpdbg', 'embed'], true)) {
    echo 'Warning: The console should be invoked via the CLI version of PHP, not the '.\PHP_SAPI.' SAPI'.\PHP_EOL;
}

set_time_limit(0);

require dirname(__DIR__).'/vendor/autoload.php';
// The check is to ensure we don't use .env in production
if (!isset($_SERVER['SYMFONY_ENV']) || $_SERVER['SYMFONY_ENV'] !== 'prod') {
    if (!class_exists(Dotenv::class)) {
        throw new \RuntimeException(
            'SYMFONY_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.'
        );
    }
    if (file_exists(__DIR__ . '/../.env.local')) {
        (new Dotenv())->load(__DIR__ . '/../.env.local');
    }
}

if (!class_exists(Application::class)) {
    throw new RuntimeException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

$input = new ArgvInput();

if (null !== $instance = $input->getParameterOption(['--instance', '-i'], null, true)) {
    # TODO: find a better place to store env files.
    $ENV_DIRECTORY = 'web/media/default/0001/01/';
    $ENV_FILE = '.env.' . $instance;
    $ENV_PATH = __DIR__ . '/../'. $ENV_DIRECTORY . $ENV_FILE;
    if (file_exists($ENV_PATH)) {
        (new Dotenv())->load($ENV_PATH);
    }
}

if (null !== $env = $input->getParameterOption(['--env', '-e'], null, true)) {
    putenv('APP_ENV='.$_SERVER['SYMFONY_ENV'] = $_ENV['SYMFONY_ENV'] = $env);
}

if ($input->hasParameterOption('--no-debug', true)) {
    putenv('APP_DEBUG='.$_SERVER['APP_DEBUG'] = $_ENV['APP_DEBUG'] = '0');
}
printf($input->getParameterOption(['--instance', '-i'], null, true) ?? '');

require dirname(__DIR__).'/config/bootstrap.php';

if ($_SERVER['APP_DEBUG']) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$kernel = new Kernel($_SERVER['SYMFONY_ENV'], (bool) $_SERVER['APP_DEBUG']);
$application = new CapcoApplication($kernel);
$application->run($input);
