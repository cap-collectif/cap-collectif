PreviewQuery:
    type: object
    inherits:
        - PublicQuery
    config:
        name: Query
        description: 'Root of the schema.'
        fields:
            viewer:
                type: 'PreviewUser!'
            projects:
                type: 'PreviewProjectConnection!'
                description: 'Lookup projects.'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    orderBy:
                        type: 'PreviewProjectOrder'
                        defaultValue: { field: PUBLISHED_AT, direction: DESC }
                        description: 'Ordering options for projects returning from the connection.'
                    theme:
                        type: 'ID'
                        description: 'ID of a Theme to filter by. If non-null, filter projects by themes'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryProjectsResolver", args, getUser(), serv("request_stack"), info)'
            events:
                type: 'PreviewEventConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                description: 'Lookup events.'
                args:
                    orderBy:
                        type: 'PreviewEventOrder'
                        defaultValue: { field: START_AT, direction: DESC }
                        description: 'Ordering options for events returning from the connection.'
                    project:
                        type: 'ID'
                        description: 'ID of a Project to filter by. If non-null, only events belonging to the project will be returned.'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryEventsResolver", args, info, serv("request_stack"))'
            users:
                type: 'PreviewUserConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                description: 'Lookup users.'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Query\\QueryUsersResolver", args, info)'
            globalDistricts:
                description: 'List all the district project in the platform.'
                type: 'PreviewGlobalDistrictConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    name:
                        type: 'String'
                        defaultValue: null
                        description: 'Filter by name.'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\District\\QueryGlobalDistrictResolver", args)'
