PreviewProject:
    type: object
    inherits:
        - PublicProject
    config:
        name: Project
        fields:
            votes:
                description: 'A list of votes associated with the project.'
                type: 'PreviewVoteConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectVotesResolver", value, args)'
            contributors:
                type: 'PreviewUserConnection!'
                description: 'A list of contributors associated with the project.'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    orderBy:
                        type: 'UserOrder'
                        description: 'Ordering options for contributors returning from the connection.'
                        defaultValue: { field: CREATED_AT, direction: DESC }
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectContributorResolver", value, args)'
            contributionsCount:
                type: 'Int!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectContributionCountResolver", value)'
                description: 'Count of contributions associated with the project.'
                deprecationReason: 'reason: "In preparation for an upcoming change to the way we expose counters, this field will only be available inside a connection, Field "contributionsCount" will be removed, Use "contributions.totalCount" instead when it will be published.'
            contributions:
                type: 'ContributionConnection!'
                description: 'Contributions associated with the project.'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectContributionResolver", value, args)'
            cover:
                type: 'PreviewMedia'
                resolve: '@=value.getCover()'
                description: 'The cover image associated with the project.'
            type:
                type: 'PreviewProjectType'
                resolve: '@=value.getProjectType()'
                description: 'The type associated with the project.'
            metaDescription:
                type: 'String'
            # TODO: Maybe use a connection instead.
            steps:
                type: '[PreviewStep!]!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectStepsResolver", value, args)'
                description: 'The different steps associated with the project.'
            authors:
                type: '[PreviewUser!]!'
                resolve: '@=value.getUserAuthors()'
                description: 'The list of users who authored the project.'
            districts:
                type: 'PreviewGlobalDistrictConnection'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Project\\ProjectDistrictsResolver", value, args)'
                description: 'Linking table with districts'
            themes:
                type: '[PreviewTheme!]'
                description: 'Themes associated with the project.'
