PreviewSource:
    type: object
    inherits:
        - PublicPublishable
        - Contribution
        - Trashable
        - UniformResourceLocatable
        - Timestampable
    config:
        name: Source
        description: 'A source'
        interfaces:
            - Node
            - PublicPublishable
            - Contribution
            - Trashable
            - UniformResourceLocatable
        fields:
            id:
                description: 'The ID of an object.'
                builder: 'Relay::GlobalId'
                type: 'ID!'
                builderConfig:
                    typeName: Source
            viewerHasReport:
                type: 'Boolean!'
                description: 'Whether or not the user has report the source.'
                resolve: '@=value.userDidReport(getUser())'
            contribuable:
                type: 'Boolean!'
                description: 'Whether or not the user can contribute to the source.'
                resolve: '@=value.canContribute(getUser())'
            viewerHasVote:
                description: 'Whether or not the user has voted for this source.'
                type: 'Boolean!'
                access: "@=hasRole('ROLE_USER')"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceViewerHasVoteResolver", [value, getUser()])'
            title:
                type: 'String!'
                description: 'The title of the source.'
            body:
                type: 'String!'
                description: 'The content of the source.'
            url:
                description: "The source's url"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Source\\SourceUrlResolver", [value])'
