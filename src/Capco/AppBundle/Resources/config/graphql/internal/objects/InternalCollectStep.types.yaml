InternalCollectStep:
    type: object
    inherits:
        - ProposalStep
    config:
        name: CollectStep
        interfaces:
            - Node
            - InternalStep
            - ProposalStep
            - RequirementStep
        fields:
            id:
                type: 'ID!'
                description: 'The ID of an object.'
                builder: 'Relay::GlobalId'
                builderConfig:
                    typeName: CollectStep
            title:
                description: 'The title of the step.'
                type: 'String!'
            kind:
                resolve: 'collect'
            requirements:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Requirement\\StepRequirementsResolver", [value, args, getUser()])'
            statuses:
                type: '[ProposalStepStatus!]!'
            private:
                type: 'Boolean!'
            defaultStatus:
                type: 'ProposalStepStatus'
            form:
                type: 'InternalProposalForm'
                resolve: '@=value.getProposalForm()'
            contributors:
                type: 'InternalUserConnection!'
                description: 'A list of contributor associated with the step.'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Step\\StepContributorResolver", [value, args])'
            viewerProposalDrafts:
                type: 'InternalProposalConnection!'
                access: "@=hasRole('ROLE_USER')"
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\CollectStep\\CollectStepViewerProposalDraftResolver", [value, getUser(), args])'
            proposals:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Step\\CollectStepProposalResolver", [value, args, getUser(), serv("request_stack")])'
            viewerProposalsUnpublished:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\CollectStep\\CollectStepViewerProposalsUnpublishedResolver", [value, args, getUser()])'
            mainView:
                type: 'MainView!'
                description: 'The main view : GRID, LIST or MAP'
            allowAuthorsToAddNews:
                type: 'Boolean!'
                description: 'Whether or not authors can add news on proposals collected in this step'
