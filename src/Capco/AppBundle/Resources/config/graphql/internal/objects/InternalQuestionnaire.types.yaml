InternalQuestionnaire:
    type: object
    inherits:
        - InternalPrimaryKey
        - InternalOwnerable
        - PreviewQuestionnaire
    config:
        name: Questionnaire
        fields:
            step:
                type: 'InternalQuestionnaireStep'
            anonymousAllowed:
                type: 'Boolean!'
            description:
                type: 'HTML'
            descriptionUsingJoditWysiwyg:
                description: 'Is the description using Jodit Wysiwyg.'
                type: 'Boolean!'
            multipleRepliesAllowed:
                type: 'Boolean!'
            contribuable:
                type: 'Boolean!'
                resolve: '@=value.canContribute(getUser())'
                description: 'accept answers or not'
            phoneConfirmationRequired:
                type: 'Boolean!'
                resolve: '@=value.isPhoneConfirmationRequired()'
            questions:
                type: '[InternalQuestion!]!'
                args:
                    filter:
                        type: 'QuestionsFilterType'
                        description: 'Filter questions by a given filter.'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionsListResolver", [value, args])'
            viewerReplies:
                type: 'InternalReplyConnection'
                argsBuilder: 'Relay::ForwardConnection'
                access: "@=hasRole('ROLE_USER')"
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireViewerRepliesResolver", [value, getUser(), args])'
            acknowledgeReplies:
                type: 'Boolean!'
            type:
                type: 'QuestionnaireType!'
                description: 'The questionnaire type'
            participants:
                type: 'InternalUserConnection!'
            notificationsConfiguration:
                type: 'QuestionnaireNotificationConfiguration!'
            replies:
                type: 'InternalReplyConnection!'
            adminReplies:
                type: 'InternalReplyConnection!'
                description: 'List of replies used in contributions admin page'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    term:
                        type: String
                        description: 'Filter replies by a given query'
                    orderBy:
                        type: 'ReplyOrder'
                        defaultValue:
                            {
                                field: !php/const Capco\AppBundle\Enum\ReplyOrderField::CREATED_AT,
                                direction: !php/const Capco\AppBundle\Enum\OrderDirection::DESC,
                            }
                        description: 'The ordering direction for questionnaires'
                    includePublished:
                        description: 'Select also published replies.'
                        type: Boolean
                        defaultValue: true
                    filterStatus:
                        description: 'Filter by status'
                        type: '[ReplyStatus]'
                        defaultValue: !php/const Capco\AppBundle\Enum\ReplyStatus::DEFAULT_STATUSES
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireAdminRepliesResolver", [value, args, getUser()])'
            privateResult:
                type: 'Boolean!'
                description: 'Results of survey are private'
            exportResultsUrl:
                type: 'URI!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireExportResultsUrlResolver", [value])'
            adminUrl:
                type: 'URI!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\QuestionnaireAdminUrlResolver", [value])'
            isIndexationDone:
                type: 'Boolean!'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Questionnaire\\IsIndexationDoneResolver")'
            createdAt:
                type: 'DateTime'
                resolve: '@=value.getCreatedAt()'
            updatedAt:
                type: 'DateTime'
                resolve: '@=value.getUpdatedAt()'
            owner:
                type: 'InternalQuestionnaireOwner'
                description: 'The owner of the questionnaire.'
