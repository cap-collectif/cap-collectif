InternalVersion:
    type: object
    inherits:
        [
            Sourceable,
            Reportable,
            Argumentable,
            ContributionWithAuthor,
            EditableContribution,
            WithFollowers,
            PreviewVersion,
        ]
    config:
        name: Version
        description: 'A version of contribution'
        interfaces:
            [Sourceable, Reportable, Argumentable, ContributionWithAuthor, EditableContribution]
        fields:
            url:
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\OpinionVersion\\OpinionVersionUrlResolver", [value])'
            viewerHasReport:
                resolve: '@=value.userDidReport(getUser())'
            comment:
                type: 'HTML'
                description: 'Explenation.'
            commentUsingJoditWysiwyg:
                description: 'Is the comment using Jodit Wysiwyg.'
                type: 'Boolean!'
            step:
                type: 'InternalConsultationStep!'
            votes:
                type: 'YesNoPairedVoteConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Opinion\\OpinionVotesResolver", [value, args])'
                args:
                    orderBy:
                        type: 'InternalProposalVoteOrder'
                        defaultValue: { field: PUBLISHED_AT, direction: DESC }
                    value:
                        type: 'YesNoPairedVoteValue'
                        description: 'Filters vote by value'
            kind:
                type: 'String!'
                resolve: 'version'
            title:
                type: 'String!'
                description: 'The title of the contribution.'
            body:
                type: 'HTML!'
                description: 'The content of the contribution.'
            bodyText:
                type: 'HTML!'
                description: 'The content of the contribution.'
            section:
                type: 'Section!'
                description: 'The section of the parent opinion.'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Opinion\\OpinionSectionResolver", [value])'
            bodyUsingJoditWysiwyg:
                description: 'Is the body using Jodit Wysiwyg.'
                type: 'Boolean!'
            answer:
                type: 'Answer'
                resolve: '@=value.getAnswer()'
            contribuable:
                resolve: '@=value.canContribute(getUser())'
            parent:
                type: 'InternalOpinion!'
            viewerVote:
                type: 'OpinionVote'
                access: "@=hasRole('ROLE_USER')"
                description: 'The viewer vote.'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\Opinion\\OpinionViewerVoteResolver", [value, getUser()])'
            diff:
                type: 'HTML'
            project:
                type: 'InternalProject'
                description: 'The related project.'
            viewerFollowingConfiguration:
                description: 'The following viewer configuration.'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ViewerFollowingConfigurationOpinionVersionResolver", [value, getUser()])'
            viewerIsFollowing:
                description: 'Either or not the viewer is following the content.'
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\ViewerFollowOpinionVersionResolver", [value, getUser()])'
            followers:
                type: 'FollowerConnection'
                description: "The opinion version's followers."
                resolve: '@=resolver("Capco\\AppBundle\\GraphQL\\Resolver\\OpinionVersion\\OpinionVersionFollowersConnection", [value, args])'
                args:
                    orderBy:
                        type: 'FollowerOrder'
                        defaultValue: { field: FOLLOWED_AT, direction: DESC }
