InternalArgument:
    type: object
    inherits:
        - Reportable
        - ContributionWithAuthor
        - EditableContribution
        - PreviewArgument
    config:
        name: Argument
        description: 'An argument'
        interfaces:
            - Reportable
            - ContributionWithAuthor
            - EditableContribution
        fields:
            createdAt:
                type: 'DateTime!'
                description: 'Identifies the date and time when the object was created.'
            url:
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Argument\\ArgumentUrlResolver", value)'
            type:
                type: 'ArgumentValue!'
                description: 'The type.'
            votes:
                type: 'ArgumentVoteConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Argument\\ArgumentVotesResolver", value, args)'
            body:
                type: 'String!'
                description: 'The content of the argument.'
            kind:
                type: 'String!'
                description: 'The kind of contribution (argument).'
            viewerHasReport:
                resolve: '@=value.userDidReport(getUser())'
            viewerHasVote:
                access: "@=hasRole('ROLE_USER')"
                type: 'Boolean!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Argument\\ArgumentViewerHasVoteResolver", value, getUser())'
            viewerVote:
                access: "@=hasRole('ROLE_USER')"
                type: 'ArgumentVote'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Argument\\ArgumentViewerVoteResolver", value, getUser())'
            contribuable:
                type: 'Boolean!'
                resolve: '@=value.canContribute(getUser())'
            step:
                type: 'InternalConsultationStep!'
