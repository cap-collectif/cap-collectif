Comment:
    type: object
    inherits:
        [
            Node,
            Trashable,
            Reportable,
            PublicPublishable,
            Contribution,
            Commentable,
            UniformResourceLocatable,
            InternalPrimaryKey,
        ]
    config:
        description: 'A comment'
        interfaces:
            - Node
            - PublicPublishable
            - Reportable
            - Contribution
            - Commentable
            - UniformResourceLocatable
        fields:
            id:
                builder: 'Relay::GlobalId'
                builderConfig:
                    typeName: Comment
            kind:
                type: 'String!'
                description: 'The kind of contribution.'
            body:
                type: 'String!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Comment\\CommentBodyResolver", value)'
            createdAt:
                type: 'DateTime!'
            updatedAt:
                type: 'DateTime'
            author:
                type: 'InternalUser'
            parent:
                type: 'Comment'
            pinned:
                type: 'Boolean!'
            contribuable:
                type: 'Boolean!'
                resolve: '@=value.canContribute(getUser())'
            url:
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Comment\\CommentShowUrlResolver", value)'
            answers:
                type: '[Comment!]!'
            authorName:
                type: 'String'
            authorEmail:
                type: 'String'
            authorIp:
                type: 'IP'
            publicationStatus:
                type: 'CommentPublicationStatus!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Comment\\CommentPublicationStatusResolver", value)'
            votes:
                type: 'CommentVoteConnection!'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    orderBy:
                        type: 'VoteOrder'
                        defaultValue: { field: PUBLISHED_AT, direction: DESC }
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Comment\\CommentVotesResolver", value, args)'
            viewerHasVote:
                type: 'Boolean!'
                resolve: '@=value.userHasVote(getUser())'
            viewerVote:
                type: 'CommentVote'
                resolve: '@=value.userGetVote(getUser())'
            editUrl:
                type: 'URI'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Comment\\CommentEditUrlResolver", value)'
            viewerHasReport:
                resolve: '@=value.userDidReport(getUser())'
            commentable:
                type: 'Commentable'
                resolve: '@=value.getRelatedObject()'
            moderationStatus:
                type: 'CommentModerationStatus!'
                description: 'If moderation is enabled, the comment status.'
            isEmailConfirmed:
                type: 'Boolean!'
                description: 'If comment is anonymous whether or not the user has confirmed his email.'
