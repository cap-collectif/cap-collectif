InternalAbstractDebateVote:
    type: interface
    inherits:
        - Node
    config:
        name: AbstractDebateVote
        description: 'An abstract debate vote.'
        resolveType: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Debate\\AbstractDebateVoteTypeResolver", value)'
        fields:
            createdAt:
                type: 'DateTime!'
                description: 'The date of the vote.'
            published:
                type: 'Boolean!'
                description: 'Whether or not the vote is published.'
            publishedAt:
                type: 'DateTime'
                description: 'The date when the vote was published at.'
            type:
                type: 'ForOrAgainstValue!'
                description: 'The value of the vote.'
            debate:
                type: 'InternalDebate!'
                description: 'The debate of the vote.'
            ipAddress:
                access: "@=hasRole('ROLE_ADMIN')"
                description: 'IP of the voter'
                type: 'IP'
            origin:
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(getUser(),value,context)'
                description: "The origin of a debate's vote"
                type: 'ContributionOrigin!'
            widgetOriginUrl:
                access: '@=service("Capco\\AppBundle\\GraphQL\\Resolver\\UserIsGrantedResolver").isGranted(getUser(),value,context)'
                description: "The URL of widget from which the debate's vote was added, if any."
                type: 'URI'
