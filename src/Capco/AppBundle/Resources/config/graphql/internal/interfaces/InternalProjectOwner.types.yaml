InternalProjectOwner:
    type: interface
    config:
        name: ProjectOwner
        description: 'Represent an owner of a project.'
        resolveType: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\User\\ProjectOwnerTypeResolver", value)'
        fields:
            id:
                type: 'ID!'
                description: 'The owner id.'
            username:
                type: 'String'
                description: 'The owner username.'
            url:
                type: 'URI!'
                description: 'The owner profile URL.'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\User\\UserUrlResolver", value)'
            projects:
                type: 'InternalProjectConnection!'
                description: 'Get all projects that the user owns.'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\User\\ProjectOwnerProjectsResolver", value, args)'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    affiliations:
                        type: '[InternalProjectAffiliation!]'
                        description: |
                            Array of viewer's affiliation options for projects returned from the connection.
                            For example, OWNER will include only projects that the current viewer owns.
                    query:
                        type: 'String'
                        description: the search query
                    orderBy:
                        type: 'InternalProjectOwnerProjectOrder'
                        defaultValue:
                            {
                                field: !php/const Capco\AppBundle\Enum\ProjectOrderField::PUBLISHED_AT,
                                direction: !php/const Capco\AppBundle\Enum\OrderDirection::DESC,
                            }
                        description: 'The ordering direction for posts'
                    status:
                        type: 'ID'
                        description: 'ID of a Status to filter by. If non-null, filter projects by statuses.'
