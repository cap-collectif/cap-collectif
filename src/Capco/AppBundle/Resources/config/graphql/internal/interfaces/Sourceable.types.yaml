Sourceable:
    type: interface
    config:
        description: 'A sourceable'
        resolveType: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Contribution\\ConsultationTypeResolver", value)'
        fields:
            id:
                type: 'ID!'
            contribuable:
                type: 'Boolean!'
                resolve: '@=value.canContribute(getUser())'
            step:
                type: 'InternalConsultationStep!'
            sources:
                description: 'The sources related to the sourceable.'
                type: 'SourceConnection!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Sourceable\\SourceableSourcesResolver", value, args)'
                argsBuilder: 'Relay::ForwardConnection'
                args:
                    orderBy:
                        type: 'SourceOrder'
                        defaultValue: { field: PUBLISHED_AT, direction: DESC }
            viewerSourcesUnpublished:
                access: "@=hasRole('ROLE_USER')"
                description: 'The viewer unpublished sources related to the sourceable (only visible by viewer).'
                type: 'SourceConnection!'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Sourceable\\SourceableViewerSourcesUnpublishedResolver", value, args, getUser())'
                argsBuilder: 'Relay::ForwardConnection'
            availableSourceCategories:
                description: 'The available sources categories of to the sourceable.'
                type: '[SourceCategory]'
                resolve: '@=query("Capco\\AppBundle\\GraphQL\\Resolver\\Sourceable\\SourceableAvailableCategoriesResolver")'
