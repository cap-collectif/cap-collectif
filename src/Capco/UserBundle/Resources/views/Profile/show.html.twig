
{% set page_class = "profile-page" %}
{% extends "@CapcoUser/layout.html.twig" %}

{% block canonical_link %}{{ url('capco_user_profile_show_all', {'slug': user.slug}) }}{% endblock %}

{% block metaTags %}
    {# OpenGraph doesn't support svg as image so no default avatar :'( #}
    {% set userMedia %}{% if user.media %}{{ media_public_url(user.media, 'default_avatar') }}{% endif %}{% endset %}
    {% include '@CapcoApp/Default/meta.html.twig' with {
        'title':       'usernames-profile'|trans({'userName': user.username }, 'CapcoAppBundle'),
        'description':  user.biography,
        'url':          url('capco_user_profile_show_all', {'slug': user.slug}),
        'type':         'profile',
        'image':        userMedia,
        'noindex':      not user.isProfilePageIndexed() or is_feature_enabled(constant('Capco\\AppBundle\\Toggle\\Manager::noindex_on_profiles'))
    } only %}
{% endblock %}
{% block title %}
    {{ parent() }} - {{ 'usernames-profile'|trans({'userName': user.username }, 'CapcoAppBundle') }}
{% endblock %}

{% block jumbotron %}{% endblock %}

{% block fos_user_content %}

    {% set commentsCount = userCommentsResolver.__invoke(app.user, user).totalCount %}
    {% set proposalsCount = userProposalsResolver.__invoke(app.user, user).totalCount %}
    {% set opinionsCount = userOpinionsResolver.getCountPublicPublished(user, true, app.user) %}
    {% set projectsCount = projectOwnerProjectsResolver.__invoke(user).totalCount %}
    {% set sourcesCount = userSourcesResolver.__invoke(app.user, user).totalCount %}
    {% set votesCount = userVotesResolver.getAccountedVotes(app.user, user).totalCount %}
    {% set versionCount = userOpinionVersionResolver.__invoke(app.user, user).totalCount %}
    {% set debateArgumentsCount = userDebateArgumentsResolver.__invoke(app.user, user).totalCount %}
    {% set argumentsCount = userArgumentsResolver.getArgumentTotalCount(app.user, user) %}
    
    {% include '@CapcoUser/Profile/showProfile.html.twig' %}

    {% if projectsCount > 0 %}
        <section id="profile-project" class="section--custom">
            <div class="container">
                <h2>{{ 'global.participative.project' | trans({}, 'CapcoAppBundle') }}</h2>
                <div class="row">
                    {% include '@CapcoUser/Profile/projects.html.twig' %}
                </div>
            </div>
        </section>
    {% endif %}

    {% if opinionsCount > 0 %}
        <section id="profile-opinion" class="section--custom">
            <div class="container">
                <h2>{{ 'global.opinion' | trans({}, 'CapcoAppBundle') }}</h2>
                {% include '@CapcoUser/Profile/opinions.html.twig' %}
            </div>
        </section>
    {% endif %}

    {% if versionCount > 0 %}
        <section id="profile-version" class="section--custom">
            <div class="container">
                <h2>{{ 'global.version' | trans({}, 'CapcoAppBundle') }}</h2>
                {{ react_render_component('OpinionVersionListPageApp', { 'props': { 'userId': user.id|toGlobalId('User')} }) }}
            </div>
        </section>
    {% endif %}

    {% if argumentsCount > 0 or debateArgumentsCount > 0 %}
        <section id="profile-argument" class="section--custom">
            <div class="container">
                <h2>{{ 'global.arguments.label' | trans({}, 'CapcoAppBundle') }}</h2>
                {{ react_render_component('ArgumentListApp', { 'props': { 'userId': user.id|toGlobalId('User'), 'isAuthenticated': is_granted('ROLE_USER') } }) }}
            </div>
        </section>
    {% endif %}

    {% if sourcesCount > 0 %}
        <section id="profile-source" class="section--custom">
            <div class="container">
                <h2>{{ 'global.sources.label' | trans({}, 'CapcoAppBundle') }}</h2>
                {% include '@CapcoUser/Profile/sources.html.twig' %}
            </div>
        </section>
    {% endif %}

    {% if proposalsCount > 0 %}
        <section id="profile-proposal" class="section--custom">
            <div class="container">
                <h2>{{ 'global.proposals' | trans({}, 'CapcoAppBundle') }}</h2>
                {{ react_render_component('UserProposalsApp', { 'props': { 'authorId': user.id|toGlobalId('User'), 'isAuthenticated': is_granted('ROLE_USER') } }) }}
            </div>
        </section>
    {% endif %}

    {% if commentsCount > 0 %}
        <section id="profile-comment" class="section--custom">
            <div class="container">
                <h2>{{ 'global.comments.label' | trans({}, 'CapcoAppBundle') }}</h2>
                {{ react_render_component('ProfileUserCommentApp', { 'props': { 'userId': user.id|toGlobalId('User'), 'isAuthenticated': is_granted('ROLE_USER') } }) }}
            </div>
        </section>
    {% endif %}

    {% set repliesCount = userRepliesResolver.__invoke(app.user, user).totalCount %}
    {% if repliesCount > 0 %}
        <section id="profile-reply" class="section--custom">
            <div class="container">
                <h2>{{ 'user.profile.show.replies' | trans({}, 'CapcoAppBundle') }}</h2>
                {% include '@CapcoUser/Profile/replies.html.twig' %}
            </div>
        </section>
    {% endif %}

    {% if votesCount > 0 %}
        <section id="profile-vote" class="section--custom">
            <div class="container">
                <h2>{{ 'global.vote' | trans({}, 'CapcoAppBundle') }}</h2>
                {{ react_render_component('VoteListApp', { 'props': { 'userId': user.id|toGlobalId('User'), 'isAuthenticated': is_granted('ROLE_USER') } }) }}
            </div>
        </section>
    {% endif %}

{% endblock fos_user_content %}

{% block javascripts %}
    <script>
        const onElementAvailable = (selector, callback) => {
            const observer = new MutationObserver(() => {
            if (document.querySelector(selector)) {
                observer.disconnect()
                callback()
            }
        })
        observer.observe(document.body, { childList: true, subtree: true })
        }
        const event = new MessageEvent("set-breadcrumb", {
            bubbles: true,
            data: [
                { title: "{{ 'navbar.homepage' | trans({}, 'CapcoAppBundle') }}", href: "/" },
                { title: "{{ user.username }}", href: "" },
            ],
        });
        onElementAvailable('#main_navbar', () => {
            document.dispatchEvent(event)
        });
    </script>
    {{ parent() }}
    <script type="text/javascript">

        $(window).on('load', function () {
            App.equalheight('.media--macro');
        });

        $(window).on('resize', function () {
            App.resized('.media--macro');
        });

    </script>
{% endblock %}
