{% extends '@SonataAdmin/standard_layout.html.twig' %}
{% block sonata_header %}
    <div style="width: 100%;">
        <header class="main-header">
            {% block sonata_header_noscript_warning %}
                <noscript>
                    <div class="noscript-warning">
                        {{ 'noscript_warning'|trans({}, 'SonataAdminBundle') }}
                    </div>
                </noscript>
            {% endblock %}
            {% block sonata_nav %}
                <nav class="navbar navbar-static-top" role="navigation">
                    <div class="navbar-left">
                        {% block sonata_breadcrumb %}
                            <div class="hidden-xs">
                                {% if _breadcrumb is not empty or action is defined %}
                                    <ol class="nav navbar-top-links breadcrumb">
                                        {% if _breadcrumb is empty %}
                                            {% if action is defined %}
                                                {% for menu in breadcrumbs_builder.breadcrumbs(admin, action) %}
                                                    {%- set translation_domain = menu.extra('translation_domain', 'messages') -%}
                                                    {# We use method accessor instead of ".label" since `menu` implements `ArrayAccess` and could have a property called "label". #}
                                                    {%- set label = menu.getLabel() -%}
                                                    {%- if translation_domain is not same as(false) -%}
                                                        {%- set label = label|trans(menu.extra('translation_params', {}), translation_domain) -%}
                                                    {%- endif -%}
                                                    {% if not loop.last %}
                                                        <li>
                                                            {% if menu.uri is not empty %}
                                                                <a href="{{ menu.uri }}">
                                                                    {% if menu.extra('safe_label', true) %}
                                                                        {{- label|raw -}}
                                                                    {% else %}
                                                                        {{- label|u.truncate(100, '...') -}}
                                                                    {% endif %}
                                                                </a>
                                                            {% else %}
                                                                <span>{{ label|u.truncate(100, '...') }}</span>
                                                            {% endif %}
                                                        </li>
                                                    {% else %}
                                                        <li class="active"><span>{{ label|u.truncate(100, '...') }}</span></li>
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}
                                        {% else %}
                                            {{ _breadcrumb|raw }}
                                        {% endif %}
                                    </ol>
                                {% endif %}
                            </div>
                        {% endblock sonata_breadcrumb %}
                    </div>
                    {% block sonata_top_nav_menu %}
                        {% include '@CapcoApp/redux_store.html.twig' %}
                        {{ react_render_component('ToastsContainerApp', {
                            'rendering': 'client_side'
                        }) }}
                        <div class="navbar-custom-menu">
                            {{ react_render_component('AdminRightNavbarApp', {
                                'props': {
                                    'currentLocale': app.request.locale,
                                    'currentRouteParams': app.request.attributes.get('_route')
                                }
                            })
                            }}
                        </div>
                    {% endblock %}
                </nav>
            {% endblock sonata_nav %}
        </header>
        <div class="content-admin">
            {% block sonata_page_content %}
                <section class="content-header">
                    {% block sonata_page_content_header %}
                        {% block sonata_page_content_nav %}
                            {% if _navbar_title is not empty
                                or _tab_menu is not empty
                                or _actions is not empty
                                or _list_filters_actions is not empty
                            %}
                                <nav class="navbar navbar-default" role="navigation">
                                    <div class="container-fluid">
                                        {% block tab_menu_navbar_header %}
                                            {% if _navbar_title is not empty %}
                                                <div class="navbar-header">
                                                    <a class="navbar-brand" href="#">{{ _navbar_title|raw }}</a>
                                                </div>
                                            {% endif %}
                                        {% endblock %}
                                        <div class="navbar-collapse">
                                            {% if _tab_menu is not empty %}
                                                <div class="navbar-left">
                                                    {{ _tab_menu|raw }}
                                                </div>
                                            {% endif %}
                                            {% if admin is defined and action is defined and action == 'list' and admin.listModes|length > 1 %}
                                                <div class="nav navbar-right btn-group">
                                                    {% for mode, settings in admin.listModes %}
                                                        <a href="{{ admin.generateUrl('list', app.request.query.all|merge({_list_mode: mode})) }}" class="btn btn-default navbar-btn btn-sm{% if admin.getListMode() == mode %} active{% endif %}"><i class="{{ settings.class }}"></i></a>
                                                    {% endfor %}
                                                </div>
                                            {% endif %}
                                            {% block sonata_admin_content_actions_wrappers %}
                                                {% if admin is defined %}
                                                    {% if admin.class == 'Capco\\AppBundle\\Entity\\Proposal' and admin.hasSubject == false %}
                                                        <ul class="nav navbar-nav navbar-right">
                                                            <li>
                                                                {{ react_render_component('ProposalCreateFusionButtonApp') }}
                                                            </li>
                                                        </ul>
                                                    {% endif %}
                                                    {% if admin.class == 'Capco\\AppBundle\\Entity\\Event' and action == 'list' %}
                                                        <ul class="nav navbar-nav navbar-right">
                                                            <li class="mr-5">
                                                                {{ react_render_component('AdminImportEventsApp') }}
                                                            </li>
                                                            <li class="mr-5">
                                                                {{ react_render_component('AdminExportButtonApp') }}
                                                            </li>
                                                        </ul>
                                                    {% endif %}
                                                    {% if admin.class == 'Capco\\AppBundle\\Entity\\Group' and admin.hasSubject == false %}
                                                        <ul class="nav navbar-nav navbar-right">
                                                            <li>
                                                                {{ react_render_component('GroupCreateButtonApp') }}
                                                            </li>
                                                        </ul>
                                                    {% elseif admin.class == 'Capco\\UserBundle\\Entity\\User' and admin.hasSubject == false %}
                                                        {# TODO redux store in global #}
                                                        {% include '@CapcoApp/redux_store.html.twig' %}
                                                        <ul class="nav navbar-nav navbar-right">
                                                            <li>
                                                                {{ react_render_component('UserAdminCreateButtonApp') }}
                                                            </li>
                                                        </ul>
                                                    {% elseif admin.class == 'Capco\\AppBundle\\Entity\\Project' and admin.hasSubject == false %}
                                                        {% include '@CapcoApp/redux_store.html.twig' %}
                                                        <ul class="nav navbar-nav navbar-right">
                                                            <li>
                                                                {{ react_render_component('ProjectCreateButtonApp') }}
                                                            </li>
                                                        </ul>
                                                    {% endif %}
                                                {% endif %}
                                                {% if _actions|replace({ '
                  <li>': '', '</li>
                  ': '' })|trim is not empty %}
                                                    <ul class="nav navbar-nav navbar-right">
                                                        {% if _actions|split('</a>')|length > 2 %}
                                                            <li class="dropdown sonata-actions">
                                                                <a href="#" class="dropdown-toggle"
                                                                   data-toggle="dropdown">{{ 'link_actions'|trans({}, 'CapcoAppBundle') }} <b class="caret"></b></a>
                                                                <ul class="dropdown-menu" role="menu">
                                                                    {{ _actions|raw }}
                                                                </ul>
                                                            </li>
                                                        {% else %}
                                                            {{ _actions|raw }}
                                                        {% endif %}
                                                    </ul>
                                                {% endif %}
                                            {% endblock sonata_admin_content_actions_wrappers %}
                                            {% if _list_filters_actions is not empty %}
                                                {{ _list_filters_actions|raw }}
                                            {% endif %}
                                        </div>
                                    </div>
                                </nav>
                            {% endif %}
                        {% endblock sonata_page_content_nav %}
                    {% endblock sonata_page_content_header %}
                </section>
                <section class="content">
                    {% block sonata_admin_content %}
                        {% block notice %}
                            {% include '@SonataTwig/FlashMessage/render.html.twig' %}
                        {% endblock notice %}
                        {% if _preview is not empty %}
                            <div class="sonata-ba-preview">{{ _preview|raw }}</div>
                        {% endif %}
                        {% if _content is not empty %}
                            <div class="sonata-ba-content">{{ _content|raw }}</div>
                        {% endif %}
                        {% if _show is not empty %}
                            <div class="sonata-ba-show">{{ _show|raw }}</div>
                        {% endif %}
                        {% if _form is not empty %}
                            <div class="sonata-ba-form">{{ _form|raw }}</div>
                        {% endif %}
                        {% if _list_filters is not empty %}
                            <div class="row">
                                {{ _list_filters|raw }}
                            </div>
                        {% endif %}
                        {% if _list_table is not empty %}
                            <div class="row">
                                {{ _list_table|raw }}
                            </div>
                        {% endif %}
                    {% endblock sonata_admin_content %}
                </section>
            {% endblock sonata_page_content %}
        </div>
    </div>
{% endblock sonata_header %}
{% block sonata_wrapper %}{% block sonata_left_side %}
    {% include '@CapcoApp/redux_store.html.twig' %}
    {{ react_render_component('SidebarApp', {
        'props': {'appVersion': app_version , 'currentRouteParams': app.request.attributes.get('_route')}
    })
    }}
{% endblock sonata_left_side %}
{% endblock sonata_wrapper %}
{% block sonata_sidebar_search %}
    {% if sonata_admin.adminPool.getOption('search') %}
        <form action="{{ path('sonata_admin_search') }}" method="GET" class="sidebar-form" role="search">
            <div class="input-group custom-search-form">
                <input type="text" name="q" id="sonata-search" value="{{ app.request.get('q') }}" class="form-control"
                       placeholder="{{ 'global.menu.search'|trans({}, 'SonataAdminBundle') }}">
                <span class="input-group-btn">
      <button class="btn btn-flat" id="sonata-search-submit" type="submit">
      <i class="fa fa-search" aria-hidden="true"></i>
      </button>
      </span>
            </div>
        </form>
    {% endif %}
{% endblock sonata_sidebar_search %}
{% block meta_tags %}
    {{ parent() }}
    {% include '@CapcoApp/favicon.html.twig' %}
{% endblock %}
{% block stylesheets %}
    {# Sonata css #}
    {{ parent() }}
    <style>
        @font-face {
            font-family: 'cap-collectif';
            font-weight: normal;
            font-style: normal;
            src: url("{{ asset('fonts/cap-collectif.eot') }}");
            src: url("{{ asset('fonts/cap-collectif.eot#iefix') }}") format('embedded-opentype'),
            url("{{ asset('fonts/cap-collectif.woff') }}") format('woff'),
            url("{{ asset('fonts/cap-collectif.ttf') }}") format('truetype'),
            url("{{ asset('fonts/cap-collectif.svg#cap-collectif') }}") format('svg');
        }
        .wrapper {display: flex;
            flex-direction: row-reverse;justify-content: flex-end;
            overflow-x: unset !important;
            overflow-y: unset !important;
        }
        .content-admin {
            width: calc(100vw - 224px);min-height: 100vh;background-color: #ecf0f5;    padding-top: 54px;height: 100%;}
        .main-header .navbar {
            min-height: 56px;
        }.main-header {
             height: 56px;
         }
        div[class*='Sidebar___StyledAccordion']::-webkit-scrollbar {
            display: none;
        }
    </style>
    <link href="{{ asset('css/vendor.css') }}" rel="stylesheet">
    <link href="{{ asset('css/style-admin.css') }}" rel="stylesheet">
{% endblock %}
{% block javascripts %}
    {% if is_feature_enabled('helpscout_beacon') %}
        {% include '@CapcoAdmin/partials/javascripts/_beamer.html.twig' %}
        {% include '@CapcoAdmin/partials/javascripts/_helpscout.html.twig' %}
    {% endif %}
    {% if is_feature_enabled('online_help') %}
        {% include '@CapcoAdmin/partials/javascripts/_online_help.html.twig' %}
    {% endif %}
    {#    jquery2 is deprecated but used by bootstrap, remove it when possible #}
    <script
        src="https://code.jquery.com/jquery-2.2.4.min.js"
        integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44="
        crossorigin="anonymous">
    </script>    <script type="text/javascript">
        window.CKEDITOR_BASEPATH = '/js/ckeditor/';
        {% include '@CapcoApp/window.js.twig' %}
    </script>
    <script src="{{ asset('js/jquery.minicolors.js') }}"></script>
    <script src="{{ asset('js/commons.js') }}"></script>
    <script src="{{ asset('js/app.js') }}"></script>
    <script src="{{ asset('js/vendor.js') }}"></script>
    {% if app.environment == 'test' %}
        <script>
            window.intl_messages = {};
        </script>
    {% else %}
        <script src="{{ asset('js/'~intl_locale()~'.js') }}"></script>
    {% endif %}
    <script src="{{ asset('js/admin.js') }}"></script>
    {# Sonata javascript #}
    {{ parent() }}
    <script type="text/javascript">
        $(window).on('load', function() {
            if ($('.minicolors-input').minicolors) {
                $('.minicolors-input').minicolors({
                    theme: 'bootstrap',
                });
            }
        });
    </script>
    {% include '@CapcoAdmin/googlemapsapi.html.twig' %}
    {% include '@CapcoAdmin/analytics_trackers.html.twig' %}
{% endblock %}
{% block logo %}
    {% if admin_pool is defined %}
        {% apply spaceless %}
            <a class="logo" href="{{ url('app_homepage', { '_locale': app.request.locale}) }}">
                {% if 'single_image' == admin_pool.getOption('title_mode') or 'both' == admin_pool.getOption('title_mode') %}
                    <img src="{{ asset(admin_pool.titlelogo) }}" alt="{{ admin_pool.title }}">
                {% endif %}
                {% if 'single_text' == admin_pool.getOption('title_mode') or 'both' == admin_pool.getOption('title_mode') %}
                    <span>{{ admin_pool.title }}</span>
                {% endif %}
            </a>
        {% endapply %}
    {% endif %}
{% endblock %}
{% block side_bar_nav %}
    {% if app.user and is_granted('ROLE_SONATA_ADMIN') %}
        <ul class="sidebar-menu">
            {% for group in admin_pool.dashboardgroups %}
                {% set display = (group.roles is empty or is_granted('ROLE_SUPER_ADMIN') ) %}
                {% for role in group.roles if not display %}
                    {% set display = is_granted(role) %}
                {% endfor %}
                {# Do not display the group label if no item in group is available #}
                {% set item_count = 0 %}
                {% if display %}
                    {% for admin in group.items if item_count == 0 %}
                        {% if admin.hasroute('list') and admin.isGranted('LIST') and is_admin_enabled(admin) %}
                            {% set item_count = item_count+1 %}
                        {% endif %}
                    {% endfor %}
                {% endif %}
                {% if display and (item_count > 0) %}
                    {% set active = false %}
                    {% for admin in group.items %}
                        {% if admin.hasroute('list') and admin.isGranted('LIST') and app.request.get('_sonata_admin') == admin.code %}
                            {% set active = true %}
                        {% elseif current_group_label is defined and current_group_label == group.label %}
                            {% set active = true %}
                        {% endif %}
                    {% endfor %}
                    <li class="treeview{% if active %} active{% endif %}">
                        <a href="#">
                            {% if group.icon|default() %}{{ group.icon|raw }}{% endif %}
                            <span>{{ group.label|trans({}, group.label_catalogue) }}</span>
                            <i class="fa pull-right fa-angle-left"></i>
                        </a>
                        <ul class="treeview-menu{% if active %} active{% endif %}">
                            {% include '@CapcoAdmin/RecentContributions/list_items.html.twig' %}
                            {% include '@CapcoAdmin/RecentReporting/list_items.html.twig' %}
                            {% for admin in group.items %}
                                {% if admin.hasroute('list') and admin.isGranted('LIST') and is_admin_enabled(admin) %}
                                    <li{% if app.request.get('_sonata_admin') == admin.code %} class="active"{% endif %}>
                                        <a href="{{ admin.generateUrl('list') }}"><i
                                                class="fa fa-angle-double-right"></i> {{ admin.label|trans({}, admin.translationdomain) }}
                                        </a></li>
                                {% endif %}
                            {% endfor %}
                            {% include '@CapcoAdmin/Settings/list_items.html.twig' %}
                        </ul>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>
    {% endif %}
{% endblock side_bar_nav %}
{% block side_bar_after_nav %}
    <div class="sidebar--app__version">{{ 'app-version'|trans({}, 'CapcoAppBundle') }} {{ app_version }}</div>
{% endblock %}