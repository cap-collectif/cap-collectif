// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UnpublishedLabel /> <TestUnpublishedLabel /> renders when not published because author confirmed his account too late 1`] = `
Array [
  <div
    className="sc-bcXGCL eByFSh toasts-container toasts-container--top"
  />,
  <div
    baseId="publishable-<Node-mock-id-1>-not-accounted-popover"
    className="UnpublishedLabel__StyledPopover-gbLcA hWAQjx"
    data-testid="Popover"
    disclosure={
      <Flex
        width="fit-content"
      >
        <Label
          bsClass="label"
          bsSize="xs"
          bsStyle="danger"
          className="ellipsis"
        >
          <i
            className="cap cap-delete-2"
          />
          <FormattedMessage
            id="not-accounted"
            values={Object {}}
          />
        </Label>
      </Flex>
    }
    options={
      Object {
        "modal": true,
      }
    }
    placement="top"
    popoverProps={
      Object {
        "preventBodyScroll": false,
      }
    }
  >
    <div
      data-testid="Header"
    >
      <p
        className="sc-bcXGCL hfwPJN cap-text excerpt_dark"
      >
        account-confirmed-too-late
      </p>
    </div>
    <div
      data-testid="Body"
      marginBottom={0}
    >
      <p
        className="sc-bcXGCL JgMzh cap-text"
      >
        account-confirmed-too-late-message
      </p>
    </div>
  </div>,
]
`;

exports[`<UnpublishedLabel /> <TestUnpublishedLabel /> renders when not published because author is not confirmed 1`] = `
Array [
  <div
    className="sc-bcXGCL eByFSh toasts-container toasts-container--top"
  />,
  <div
    baseId="publishable-<Node-mock-id-1>-not-accounted-popover"
    className="UnpublishedLabel__StyledPopover-gbLcA hWAQjx"
    data-testid="Popover"
    disclosure={
      <Flex
        width="fit-content"
      >
        <Label
          bsClass="label"
          bsSize="xs"
          bsStyle="danger"
          className="ellipsis"
        >
          <i
            className="cap cap-delete-2"
          />
          <FormattedMessage
            id="not-accounted"
            values={Object {}}
          />
        </Label>
      </Flex>
    }
    options={
      Object {
        "modal": true,
      }
    }
    placement="top"
    popoverProps={
      Object {
        "preventBodyScroll": false,
      }
    }
  >
    <div
      data-testid="Header"
    >
      <p
        className="sc-bcXGCL hfwPJN cap-text excerpt_dark"
      >
        account-confirmed-too-late
      </p>
    </div>
    <div
      data-testid="Body"
      marginBottom={0}
    >
      <p
        className="sc-bcXGCL JgMzh cap-text"
      >
        account-confirmed-too-late-message
      </p>
    </div>
  </div>,
]
`;

exports[`<UnpublishedLabel /> <TestUnpublishedLabel /> renders when not published because author must confirm 1`] = `
Array [
  <div
    className="sc-bcXGCL eByFSh toasts-container toasts-container--top"
  />,
  <div
    baseId="publishable-<Node-mock-id-1>-not-accounted-popover"
    className="UnpublishedLabel__StyledPopover-gbLcA hWAQjx"
    data-testid="Popover"
    disclosure={
      <Flex
        width="fit-content"
      >
        <Label
          bsClass="label"
          bsSize="xs"
          bsStyle="danger"
          className="ellipsis"
        >
          <i
            className="cap cap-delete-2"
          />
          <FormattedMessage
            id="not-accounted"
            values={Object {}}
          />
        </Label>
      </Flex>
    }
    options={
      Object {
        "modal": true,
      }
    }
    placement="top"
    popoverProps={
      Object {
        "preventBodyScroll": false,
      }
    }
  >
    <div
      data-testid="Header"
    >
      <p
        className="sc-bcXGCL hfwPJN cap-text excerpt_dark"
      >
        account-confirmed-too-late
      </p>
    </div>
    <div
      data-testid="Body"
      marginBottom={0}
    >
      <p
        className="sc-bcXGCL JgMzh cap-text"
      >
        account-confirmed-too-late-message
      </p>
    </div>
  </div>,
]
`;

exports[`<UnpublishedLabel /> <TestUnpublishedLabel /> renders when published 1`] = `
Array [
  <div
    className="sc-bcXGCL eByFSh toasts-container toasts-container--top"
  />,
  <div
    baseId="publishable-<Node-mock-id-1>-not-accounted-popover"
    className="UnpublishedLabel__StyledPopover-gbLcA hWAQjx"
    data-testid="Popover"
    disclosure={
      <Flex
        width="fit-content"
      >
        <Label
          bsClass="label"
          bsSize="xs"
          bsStyle="danger"
          className="ellipsis"
        >
          <i
            className="cap cap-delete-2"
          />
          <FormattedMessage
            id="not-accounted"
            values={Object {}}
          />
        </Label>
      </Flex>
    }
    options={
      Object {
        "modal": true,
      }
    }
    placement="top"
    popoverProps={
      Object {
        "preventBodyScroll": false,
      }
    }
  >
    <div
      data-testid="Header"
    >
      <p
        className="sc-bcXGCL hfwPJN cap-text excerpt_dark"
      >
        account-confirmed-too-late
      </p>
    </div>
    <div
      data-testid="Body"
      marginBottom={0}
    >
      <p
        className="sc-bcXGCL JgMzh cap-text"
      >
        account-confirmed-too-late-message
      </p>
    </div>
  </div>,
]
`;
