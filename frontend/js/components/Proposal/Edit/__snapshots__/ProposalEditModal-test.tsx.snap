// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalEditModal /> should render correctly with DELETED status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "DELETED",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "DELETED",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            isLoading={false}
            onClick={[MockFunction]}
            variant="secondary"
            variantColor="hierarchy"
            variantSize="big"
          >
            global.cancel
          </Button>
          <Button
            disabled={true}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;

exports[`<ProposalEditModal /> should render correctly with DRAFT status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "DRAFT",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "DRAFT",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            disabled={false}
            id="confirm-proposal-create-as-draft"
            isLoading={false}
            onClick={[Function]}
            variant="tertiary"
            variantColor="primary"
            variantSize="big"
          >
            global.save
          </Button>
          <Button
            disabled={false}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;

exports[`<ProposalEditModal /> should render correctly with PUBLISHED status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "PUBLISHED",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "PUBLISHED",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            isLoading={false}
            onClick={[MockFunction]}
            variant="secondary"
            variantColor="hierarchy"
            variantSize="big"
          >
            global.cancel
          </Button>
          <Button
            disabled={true}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;

exports[`<ProposalEditModal /> should render correctly with TRASHED status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "TRASHED",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "TRASHED",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            isLoading={false}
            onClick={[MockFunction]}
            variant="secondary"
            variantColor="hierarchy"
            variantSize="big"
          >
            global.cancel
          </Button>
          <Button
            disabled={true}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;

exports[`<ProposalEditModal /> should render correctly with TRASHED_NOT_VISIBLE status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "TRASHED_NOT_VISIBLE",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "TRASHED_NOT_VISIBLE",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            isLoading={false}
            onClick={[MockFunction]}
            variant="secondary"
            variantColor="hierarchy"
            variantSize="big"
          >
            global.cancel
          </Button>
          <Button
            disabled={true}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;

exports[`<ProposalEditModal /> should render correctly with UNPUBLISHED status 1`] = `
<ProposalEditModal__ModalProposalEditContainer
  ariaLabel="contained-modal-title-lg"
  baseId="proposal-edit-modal"
  dialogClassName="custom-modal-dialog"
  forceModalDialogToFalse={false}
  fullSizeOnMobile={true}
  hideCloseButton={false}
  hideOnClickOutside={false}
  hideOnEsc={true}
  onClose={[Function]}
  show={true}
  size="xl"
>
  <ResetCss>
    <Component
      borderBottom={
        Array [
          "",
          "1px solid #DADEE1",
        ]
      }
      closeIconLabel="close.modal"
    >
      <Heading>
        global.edit
      </Heading>
    </Component>
  </ResetCss>
  <AnimatePresence>
    <ProposalOtherPanelsModal
      modalState="NORMAL"
      onClose={[MockFunction]}
      proposalForm={
        Object {
          " $fragmentRefs": null,
          "contribuable": true,
        }
      }
      resetModalState={[Function]}
    />
    <ForwardRef(MotionComponent)
      animate={
        Object {
          "display": "block",
          "opacity": 1,
        }
      }
      exit={
        Object {
          "display": "none",
          "opacity": 0,
        }
      }
      initial={
        Object {
          "opacity": 0,
        }
      }
      key="normal"
      style={
        Object {
          "overflow": "scroll",
        }
      }
    >
      <Component
        display="flex"
        height="unset"
      >
        <Relay(ProposalDraftAlert)
          mb={6}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "UNPUBLISHED",
            }
          }
        />
        <Relay(Connect(injectIntl(ReduxForm)))
          isBackOfficeInput={false}
          onAddressEdit={[Function]}
          onSubmitFailed={[Function]}
          onSubmitSuccess={[MockFunction]}
          proposal={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allRevisions": Object {
                "edges": Array [],
                "totalCount": 0,
              },
              "form": Object {
                " $fragmentRefs": null,
                "contribuable": true,
              },
              "id": "1",
              "publicationStatus": "UNPUBLISHED",
            }
          }
          proposalForm={
            Object {
              " $fragmentRefs": null,
              "contribuable": true,
            }
          }
          setValuesSaved={[Function]}
        />
      </Component>
      <Component
        borderTop={
          Array [
            "",
            "1px solid #DADEE1",
          ]
        }
        display="flex"
      >
        <ButtonGroup>
          <Button
            isLoading={false}
            onClick={[MockFunction]}
            variant="secondary"
            variantColor="hierarchy"
            variantSize="big"
          >
            global.cancel
          </Button>
          <Button
            disabled={true}
            id="confirm-proposal-edit"
            isLoading={false}
            onClick={[Function]}
            variant="primary"
            variantColor="primary"
            variantSize="big"
          >
            global.publish
          </Button>
        </ButtonGroup>
      </Component>
    </ForwardRef(MotionComponent)>
  </AnimatePresence>
</ProposalEditModal__ModalProposalEditContainer>
`;
