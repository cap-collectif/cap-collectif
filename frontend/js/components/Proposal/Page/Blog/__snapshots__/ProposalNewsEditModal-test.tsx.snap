// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProposalNewsEditModal /> should render correctly 1`] = `
<Modal
  animation={false}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  className={null}
  dialogClassName="modal--update"
  dialogComponentClass={[Function]}
  enforceFocus={false}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={false}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="close.modal"
  >
    <ModalTitle
      bsClass="modal-title"
      className="font-weight-bold"
      componentClass="h4"
    >
      <FormattedMessage
        id="proposal-edit-news"
        values={Object {}}
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <Relay(Connect(ReduxForm))
      onSubmit={[Function]}
      post={
        Object {
          " $fragmentRefs": null,
          " $refType": null,
          "authors": Array [
            Object {
              "id": "author1",
              "slug": "omar-bg",
            },
          ],
          "id": "pos1",
        }
      }
    />
    <Relay(Connect(ProposalNewsDeleteModal))
      displayDeleteModal={[Function]}
      onSubmit={[Function]}
      post={
        Object {
          " $fragmentRefs": null,
          " $refType": null,
          "authors": Array [
            Object {
              "id": "author1",
              "slug": "omar-bg",
            },
          ],
          "id": "pos1",
        }
      }
      showDeleteModal={false}
    />
    <AlertForm
      invalid={false}
      submitFailed={false}
      submitSucceeded={false}
      submitting={false}
      valid={true}
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      display="inline"
      id="delete-proposal-news"
      mr={3}
      onClick={[Function]}
      variant="tertiary"
      variantColor="danger"
    >
      <FormattedMessage
        id="global.delete"
        values={Object {}}
      />
    </Button>
    <CloseButton
      label="global.cancel"
      onClose={[Function]}
    />
    <Connect(SubmitButton)
      bsStyle="primary"
      disabled={true}
      id="confirm-post-edit"
      isSubmitting={false}
      label="global.publish"
      onSubmit={[Function]}
    />
  </ModalFooter>
</Modal>
`;

exports[`<ProposalNewsEditModal /> should render correctly with modal open 1`] = `
<Modal
  animation={false}
  autoFocus={true}
  backdrop="static"
  bsClass="modal"
  className="overflow-hidden"
  dialogClassName="modal--update"
  dialogComponentClass={[Function]}
  enforceFocus={false}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="close.modal"
  >
    <ModalTitle
      bsClass="modal-title"
      className="font-weight-bold"
      componentClass="h4"
    >
      <FormattedMessage
        id="proposal-edit-news"
        values={Object {}}
      />
    </ModalTitle>
  </ModalHeader>
  <ModalBody
    bsClass="modal-body"
    componentClass="div"
  >
    <Relay(Connect(ReduxForm))
      onSubmit={[Function]}
      post={
        Object {
          " $fragmentRefs": null,
          " $refType": null,
          "authors": Array [
            Object {
              "id": "author1",
              "slug": "omar-bg",
            },
          ],
          "id": "pos1",
        }
      }
    />
    <Relay(Connect(ProposalNewsDeleteModal))
      displayDeleteModal={[Function]}
      onSubmit={[Function]}
      post={
        Object {
          " $fragmentRefs": null,
          " $refType": null,
          "authors": Array [
            Object {
              "id": "author1",
              "slug": "omar-bg",
            },
          ],
          "id": "pos1",
        }
      }
      showDeleteModal={false}
    />
    <AlertForm
      invalid={false}
      submitFailed={false}
      submitSucceeded={false}
      submitting={false}
      valid={true}
    />
  </ModalBody>
  <ModalFooter
    bsClass="modal-footer"
    componentClass="div"
  >
    <Button
      display="inline"
      id="delete-proposal-news"
      mr={3}
      onClick={[Function]}
      variant="tertiary"
      variantColor="danger"
    >
      <FormattedMessage
        id="global.delete"
        values={Object {}}
      />
    </Button>
    <CloseButton
      label="global.cancel"
      onClose={[Function]}
    />
    <Connect(SubmitButton)
      bsStyle="primary"
      disabled={true}
      id="confirm-post-edit"
      isSubmitting={false}
      label="global.publish"
      onSubmit={[Function]}
    />
  </ModalFooter>
</Modal>
`;
