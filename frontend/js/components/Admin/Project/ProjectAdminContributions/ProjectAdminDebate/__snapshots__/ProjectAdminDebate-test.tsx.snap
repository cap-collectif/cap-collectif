// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProjectAdminDebate /> should render correctly 1`] = `
<Flex
  direction="column"
>
  <Accordion
    defaultAccordion="face-to-face"
    spacing={2}
  >
    <AccordionItem
      id="face-to-face"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="the.face-to-face"
            tagName={Symbol(react.fragment)}
            values={Object {}}
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Skeleton
          isLoaded={true}
          placeholder={<FaceToFacePlaceholder />}
        >
          <Relay(FaceToFace)
            debate={
              Object {
                " $fragmentRefs": null,
                " $refType": null,
                "allArguments": Object {
                  "totalCount": 3,
                },
                "votes": Object {
                  "totalCount": 1,
                },
              }
            }
          />
        </Skeleton>
      </AccordionPanel>
    </AccordionItem>
    <AccordionItem
      id="argument"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="argument-count"
            tagName={Symbol(react.fragment)}
            values={
              Object {
                "count": 3,
              }
            }
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Relay(ArgumentTabQuery)
          debate={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allArguments": Object {
                "totalCount": 3,
              },
              "votes": Object {
                "totalCount": 1,
              },
            }
          }
          debateStep={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
            }
          }
        />
      </AccordionPanel>
    </AccordionItem>
    <AccordionItem
      id="vote"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="votes-count"
            tagName={Symbol(react.fragment)}
            values={
              Object {
                "num": 1,
              }
            }
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Relay(VoteTabQuery)
          debate={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allArguments": Object {
                "totalCount": 3,
              },
              "votes": Object {
                "totalCount": 1,
              },
            }
          }
          debateStep={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
            }
          }
        />
      </AccordionPanel>
    </AccordionItem>
  </Accordion>
</Flex>
`;

exports[`<ProjectAdminDebate /> should render correctly with contributions step 1`] = `
<Flex
  direction="column"
>
  <Button
    leftIcon="LONG_ARROW_LEFT"
    mb={8}
    onClick={[Function]}
    size="small"
    variant="tertiary"
  >
    <FormattedMessage
      id="global.steps"
      values={Object {}}
    />
  </Button>
  <Accordion
    defaultAccordion="face-to-face"
    spacing={2}
  >
    <AccordionItem
      id="face-to-face"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="the.face-to-face"
            tagName={Symbol(react.fragment)}
            values={Object {}}
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Skeleton
          isLoaded={true}
          placeholder={<FaceToFacePlaceholder />}
        >
          <Relay(FaceToFace)
            debate={
              Object {
                " $fragmentRefs": null,
                " $refType": null,
                "allArguments": Object {
                  "totalCount": 3,
                },
                "votes": Object {
                  "totalCount": 1,
                },
              }
            }
          />
        </Skeleton>
      </AccordionPanel>
    </AccordionItem>
    <AccordionItem
      id="argument"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="argument-count"
            tagName={Symbol(react.fragment)}
            values={
              Object {
                "count": 3,
              }
            }
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Relay(ArgumentTabQuery)
          debate={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allArguments": Object {
                "totalCount": 3,
              },
              "votes": Object {
                "totalCount": 1,
              },
            }
          }
          debateStep={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
            }
          }
        />
      </AccordionPanel>
    </AccordionItem>
    <AccordionItem
      id="vote"
    >
      <AccordionButton>
        <Heading
          as="h4"
        >
          <FormattedMessage
            id="votes-count"
            tagName={Symbol(react.fragment)}
            values={
              Object {
                "num": 1,
              }
            }
          />
        </Heading>
      </AccordionButton>
      <AccordionPanel>
        <Relay(VoteTabQuery)
          debate={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
              "allArguments": Object {
                "totalCount": 3,
              },
              "votes": Object {
                "totalCount": 1,
              },
            }
          }
          debateStep={
            Object {
              " $fragmentRefs": null,
              " $refType": null,
            }
          }
        />
      </AccordionPanel>
    </AccordionItem>
  </Accordion>
</Flex>
`;
